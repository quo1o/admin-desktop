/* eslint-disable max-len */

type CommonRequest = {
  // Уникальный идентификатор команды. Любая строка из 40 символов - должна быть уникальна для каждой подаваемой команды
  // По этому идентификатору можно запросить результат выполнения команды
  // Поле не обязательно
  IdCommand: string;
  Command: string;
};

type CommonResponse = {
  // Ok = 0, Run(Запущено на выполнение) = 1, Error = 2, NotFound(устройство не найдено) = 3, NotRun = 4, AlreadyDone(Выполнено ранее) = 5, ErrorInEGAIS(Ошибка ЕГАИС) = 6
  Status: 0 | 1 | 2 | 3 | 4 | 5 | 6;
  // Текст ошибки если была - обязательно показать пользователю -
  // по содержанию ошибки можно в 90% случаях понять как ее устранять
  Error: string;
  Warning: string;
  Message: string;
  // Номер документа
  CheckNumber?: number;
  // Номер смены
  SessionNumber?: number;
  LineLength?: number;
};

type Tax = -1 | 0 | 10 | 20 | 120 | 110;

// Строка с печатью картинки
type ImageString = {
  PrintImage: {
    //Картинка в Base64. Картинка будет преобразована в 2-х цветное изображение- поэтому лучше посылать 2-х цветный bmp
    Image: string;
  };
};
// Строка с печатью текста
type TextString = {
  PrintText: {
    Text: string;
    Font?: 0 | 1 | 2 | 3 | 4; // 1-4, 0 - по настройкам ККМ
    Intensity?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15; // 1-15, 0 - по настройкам ККМ
  };
};
// Строка с печатью информации о товаре
type ItemString = {
  Register: {
    // Наименование товара 64 символа, Тег 1059
    Name: string;
    // Количество товара (3 знака после запятой), Тег 1023
    Quantity: number;
    // Цена за шт. без скидки (2 знака после запятой)
    Price?: number;
    // Конечная сумма строки с учетом всех скидок /наценок; (2 знака после запятой), Из нее расчет тега 1079
    Amount: number;
    // Отдел, по которому ведется продажа
    Department?: number;
    // НДС в процентах или ТЕГ НДС: 0 (НДС 0%), 10 (НДС 10%), 20 (НДС 20%), -1 (НДС не облагается), 120 (НДС 20 /120), 110 (НДС 10 /110), Тег 1043, Из нее расчет тега 1079
    Tax: Tax;
    //Штрих-код EAN13 для передачи в ОФД (не печатется)
    EAN13?: string;
    // Признак способа расчета. Тег ОФД 1214. Для ФФД.1.05 и выше обязательное поле
    // 1: "ПРЕДОПЛАТА 100% (Полная предварительная оплата до момента передачи предмета расчета)"
    // 2: "ПРЕДОПЛАТА (Частичная предварительная оплата до момента передачи предмета расчета)"
    // 3: "АВАНС"
    // 4: "ПОЛНЫЙ РАСЧЕТ (Полная оплата, в том числе с учетом аванса в момент передачи предмета расчета)"
    // 5: "ЧАСТИЧНЫЙ РАСЧЕТ И КРЕДИТ (Частичная оплата предмета расчета в момент его передачи с последующей оплатой в кредит )"
    // 6: "ПЕРЕДАЧА В КРЕДИТ (Передача предмета расчета без его оплаты в момент его передачи с последующей оплатой в кредит)"
    // 7: "ОПЛАТА КРЕДИТА (Оплата предмета расчета после его передачи с оплатой в кредит )"
    SignMethodCalculation: 1 | 2 | 3 | 4 | 5 | 6 | 7;
    // Признак предмета расчета. Тег ОФД 1212. Для ФФД.1.05 и выше обязательное поле
    // 1: "ТОВАР (наименование и иные сведения, описывающие товар)"
    // 2: "ПОДАКЦИЗНЫЙ ТОВАР (наименование и иные сведения, описывающие товар)"
    // 3: "РАБОТА (наименование и иные сведения, описывающие работу)"
    // 4: "УСЛУГА (наименование и иные сведения, описывающие услугу)"
    // 5: "СТАВКА АЗАРТНОЙ ИГРЫ (при осуществлении деятельности по проведению азартных игр)"
    // 6: "ВЫИГРЫШ АЗАРТНОЙ ИГРЫ (при осуществлении деятельности по проведению азартных игр)"
    // 7: "ЛОТЕРЕЙНЫЙ БИЛЕТ (при осуществлении деятельности по проведению лотерей)"
    // 8: "ВЫИГРЫШ ЛОТЕРЕИ (при осуществлении деятельности по проведению лотерей)"
    // 9: "ПРЕДОСТАВЛЕНИЕ РИД (предоставлении прав на использование результатов интеллектуальной деятельности или средств индивидуализации)"
    // 10: "ПЛАТЕЖ (аванс, задаток, предоплата, кредит, взнос в счет оплаты, пени, штраф, вознаграждение, бонус и иной аналогичный предмет расчета)"
    // 11: "АГЕНТСКОЕ ВОЗНАГРАЖДЕНИЕ (вознаграждение (банковского)платежного агента/субагента, комиссионера, поверенного или иным агентом)"
    // 12: "СОСТАВНОЙ ПРЕДМЕТ РАСЧЕТА (предмет расчета, состоящем из предметов, каждому из которых может быть присвоено вышестоящее значение"
    // 13: "ИНОЙ ПРЕДМЕТ РАСЧЕТА (предмет расчета, не относящемуся к предметам расчета, которым может быть присвоено вышестоящее значение"
    // 14: "ИМУЩЕСТВЕННОЕ ПРАВО" (передача имущественных прав)
    // 15: "ВНЕРЕАЛИЗАЦИОННЫЙ ДОХОД"
    // 16: "СТРАХОВЫЕ ВЗНОСЫ" (суммы расходов, уменьшающих сумму налога (авансовых платежей) в соответствии с пунктом 3.1 статьи 346.21 Налогового кодекса Российской Федерации)
    // 17: "ТОРГОВЫЙ СБОР" (суммы уплаченного торгового сбора)
    // 18: "КУРОРТНЫЙ СБОР"
    // 19: "ЗАЛОГ"
    SignCalculationObject: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19;
    // Единица измерения предмета расчета. Можно не указывать, Тег 1197
    MeasurementUnit?: string;
    // Цифровой код страны происхождения товара в соответствии с Общероссийским классификатором стран мира 3 симв. Тег 1230
    CountryOfOrigin?: string;
    // Регистрационный номер таможенной декларации 32 симв. Тег 1231
    CustomsDeclaration?: string;
    // Сумма акциза с учетом копеек, включенная в стоимость предмета расчета Тег 1229
    ExciseAmount?: number;
    // КИЗ (контрольный идентификационный знак) товарной номенклатуры, Тег ОФД 1162 (честный знак), можно не указывать
    //Описание применимых ШК
    GoodCodeData?: {
      // штрих-код маркировки товара со сканера (нужно настроить сканер так чтобы не проглатывал управляющие символы)
      // Поддерживаются ШК: 
      // Без идентификатора экземпляра товара: EAN8, EAN13, ITF14
      // С идентификатором экземпляра товара: GS1, ШК шуб, ШК табачной продукции., ЕГАИС-2, ЕГАИС-3
      BarCode: string;
      // Проверять содержит ли ШК кода маркировки идентификатор экземпляра товара (если вообше не указать - true)
      // Для некоторых товаров нужно передавать ШК EAN-13, тогда это поле устанавливайте в 'false'
      ContainsSerialNumber: boolean;
    };
    // Признак агента. Тег ОФД 1222. Поле не обязательное. Можно вообще не указывать.
    // 0: "Банковский платежный агент:" Оказание услуг пользователем, являющимся банковским платежным агентом
    // 1: "Банковский платежный субагент:" Оказание услуг пользователем, являющимся банковским платежным субагентом
    // 2: "Платежный агент:" Оказание услуг пользователем, являющимся платежным агентом
    // 3: "Платежный субагент:" Оказание услуг пользователем, являющимся платежным субагентом
    // 4: "Поверенный:" Оказание услуг пользователем, являющимся поверенным
    // 5: "Комиссионер:" Оказание услуг пользователем, являющимся комиссионером
    // 6: "Агент:" Оказание услуг пользователем, являющимся агентом и не являющимся банковским платежным агентом (субагентом), платежным агентом (субагентом), поверенным, комиссионером
    AgentSign?: 0 | 1 | 2 | 3 | 4 | 5 | 6;
    // Данные агента. Тег ОД 1223.
    // Поле не обязательное. Обязательно если установлено поле "AgentSign"
    // Можно вообще не указывать.
    AgentData?: {
      // Операция платежного агента. Тег ОФД 1044
      PayingAgentOperation: string;
      // Телефон платежного агента. Тег ОФД 1073
      PayingAgentPhone: string;
      // Телефон оператора по приему платежей. Тег ОФД 1074
      ReceivePaymentsOperatorPhone: string;
      // Телефон оператора перевода. Тег ОФД 1075
      MoneyTransferOperatorPhone: string;
      // Наименование оператора перевода. Тег ОФД 1026
      MoneyTransferOperatorName: string;
      // Адрес оператора перевода. Тег ОФД 1005
      MoneyTransferOperatorAddress: string;
      // ИНН оператора перевода. Тег ОФД 1016
      MoneyTransferOperatorVATIN: string;
    };
    // Данные поставщика платежного агента. Тег ОФД 1224
    // Поле не обязательное. Обязательно если установлено поле "AgentSign"
    // Можно вообще не указывать.
    PurveyorData?: {
      // Телефон поставщика. Тег ОД 1171
      PurveyorPhone: string;
      // Наименование поставщика. Тег ОФД 1225
      PurveyorName: string;
      // ИНН поставщика. Тег ОФД 1226
      PurveyorVATIN: string;
    };
    // Дополнительный реквизит предмета расчета тег 1191, Только для ФФД 1.1 !
    AdditionalAttribute?: string;
    // Данные для ЕГАИС системы, можно не указывать
    EGAIS?: {
      Barcode: string;
      Ean: string;
      Volume: number;
    };
  };
};
type BarCodeString = {
  BarCode: {
    // Тип штрих-кода: "EAN13" , "CODE39" , "CODE128" , "QR" , "PDF417" .
    BarcodeType: 'EAN13' | 'CODE39' | 'CODE128' | 'QR' | 'PDF417';
    // Значение штрих-кода
    Barcode: string;
  };
};
type CheckString = ImageString | TextString | ItemString | BarCodeString
type CorrectionString = ImageString | TextString | BarCodeString;

type RegisterCheckReq = CommonRequest & {
  // Команда серверу
  Command: 'RegisterCheck';

  //***********************************************************************************************************
  // ПОЛЯ ПОИСКА УСТРОЙСТВА
  //***********************************************************************************************************
  // Номер устройства. Если 0 то первое не блокированное на сервере
  NumDevice?: number;
  // ИНН ККМ для поиска. Если "" то ККМ ищется только по NumDevice,
  // Если NumDevice = 0 а InnKkm заполнено то ККМ ищется только по InnKkm
  InnKkm?: string;
  //---------------------------------------------
  // Заводской номер ККМ для поиска. Если "" то ККМ ищется только по NumDevice,
  KktNumber?: string;
  // **********************************************************************************************************

  // Время (сек) ожидания выполнения команды.
  //Если За это время команда не выполнилась в статусе вернется результат "NotRun" или "Run"
  //Проверить результат еще не выполненной команды можно командой "GetRezult"
  //Если не указано или 0 - то значение по умолчанию 60 сек.
  // Поле не обязательно. Это поле можно указывать во всех командах
  Timeout?: number;
  // Это фискальный или не фискальный чек
  IsFiscalCheck: boolean;
  // Тип чека, Тег 1054;
  // 0 – продажа;                             10 – покупка;
  // 1 – возврат продажи;                     11 - возврат покупки;
  // 8 - продажа только по ЕГАИС (обычный чек ККМ не печатается)
  // 9 - возврат продажи только по ЕГАИС (обычный чек ККМ не печатается)
  // 2 – корректировка приход;
  // 12 – корректировка расход;
  TypeCheck: 0 | 1 | 2 | 8 | 9 | 10 | 11 | 12;
  // Не печатать чек на бумагу
  NotPrint: boolean; //true,
  // Количество копий документа
  NumberCopies?: number;
  // Продавец, Тег ОФД 1021
  CashierName: string;
  // ИНН продавца Тег ОФД 1203
  CashierVATIN?: string;
  // Телефон или е-Майл покупателя, Тег ОФД 1008
  // Если чек не печатается (NotPrint = true) то указывать обязательно
  // Формат: Телефон +{Ц} или Email {С}@{C}
  ClientAddress?: string;
  // Покупатель (клиент) - наименование организации или фамилия, имя, отчество (при наличии), серия и номер паспорта покупателя(клиента). Тег 1227
  // Только с использованием наличных / электронных денежных средств и при выплате выигрыша, получении страховой премии или при страховой выплате.
  ClientInfo?: string;
  // ИНН Организации или покупателя(клиента). Тег 1228
  // Только с использованием наличных / электронных денежных средств и при выплате выигрыша, получении страховой премии или при страховой выплате.
  ClientINN?: string;
  // Aдрес электронной почты отправителя чека, Тег ОФД 1117 (если задан при регистрации можно не указывать)
  // Формат: Email {С}@{C}
  SenderEmail?: string;
  // Место расчетов, Тег ОФД 1187 (если не задано - берется из регистрационных данных ККТ)
  PlaceMarket?: string;
  // Система налогообложения (СНО) применяемая для чека, Тег 1055
  // Если не указанно - система СНО настроенная в ККМ по умолчанию
  // 0: Общая ОСН
  // 1: Упрощенная УСН (Доход)
  // 2: Упрощенная УСН (Доход минус Расход)
  // 3: Единый налог на вмененный доход ЕНВД
  // 4: Единый сельскохозяйственный налог ЕСН
  // 5: Патентная система налогообложения
  // Комбинация разных СНО не возможна
  // Надо указывать если ККМ настроена на несколько систем СНО
  TaxVariant?: string;

  //ClientId: "557582273e4edc1c6f315efe",
  // Это только для тестов: Получение ключа суб-лицензии : ВНИМАНИЕ: ключ суб-лицензии вы должны генерить у себя на сервере!!!!
  //KeySubLicensing: GetKeySubLicensing("sochi@papa.com", "12qw12"),
  // КПП организации, нужно только для ЕГАИС
  //KPP: "782543005",

  // Если надо одновременно автоматически провести транзакцию через эквайринг 
  // Эквайринг будет задействован если: 1. чек фискальный, 2. оплата по "ElectronicPayment" не равна 0, 3. PayByProcessing = true
  // Использовать эквайринг: Null - из настроек на сервере, false - не будет, true - будет
  PayByProcessing?: boolean | null; //В тестовом чеке автоматический эквайринг выключен
  // Номер устройства для эквайринга - Null - из настроек на сервере, 0 - любое, число - номер конкретного устройства
  NumDeviceByProcessing?: number | null;
  // Номер чека для эквайринга
  ReceiptNumber?: string;
  // Печатать Слип-чек после чека (а не в чеке)
  PrintSlipAfterCheck?: boolean | null;
  // Печатать Слип-чек дополнительно для кассира (основной слип-чек уже будет печататся в составе чека)
  PrintSlipForCashier?: boolean | null;
  //Если это чек возврата то возможны два поля для отмены транзакции (если не указано то по эквайрингу будет не отмена а возврат оплаты)
  RRNCode?: string; // RRNCode из операции эквайринга. Только для отмены оплаты! Для Оплаты или возврата оплаты не заполнять!
  AuthorizationCode?: string; // AuthorizationCode из операции эквайринга. Только для отмены оплаты! Для Оплаты или возврата оплаты не заполнять!

  // Признак агента. Тег ОФД 1057. Поле не обязательное. Можно вообще не указывать.
  // 0: "Банковский платежный агент:" Оказание услуг пользователем, являющимся банковским платежным агентом
  // 1: "Банковский платежный субагент:" Оказание услуг пользователем, являющимся банковским платежным субагентом
  // 2: "Платежный агент:" Оказание услуг пользователем, являющимся платежным агентом
  // 3: "Платежный субагент:" Оказание услуг пользователем, являющимся платежным субагентом
  // 4: "Поверенный:" Оказание услуг пользователем, являющимся поверенным
  // 5: "Комиссионер:" Оказание услуг пользователем, являющимся комиссионером
  // 6: "Агент:" Оказание услуг пользователем, являющимся агентом и не являющимся банковским платежным агентом (субагентом), платежным агентом (субагентом), поверенным, комиссионером
  AgentSign?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | null;
  // Данные агента. Тег ОД 1223.
  // Поле не обязательное. Обязательно если установлено поле "AgentSign"
  // Можно вообще не указывать.
  AgentData?: {
    // Операция платежного агента, Тег ОФД 1044
    PayingAgentOperation: string;
    // Телефон платежного агента, Тег ОФД 1073
    PayingAgentPhone: string;
    // Телефон оператора по приему платежей, Тег ОФД 1074
    ReceivePaymentsOperatorPhone: string; //"+72223334455",
    // Телефон оператора перевода, Тег ОФД 1075
    MoneyTransferOperatorPhone: string;
    // Наименование оператора перевода, Тег ОФД 1026
    MoneyTransferOperatorName: string; // "ООО Тестовая организация"
    // Адрес оператора перевода, Тег ОФД 1005
    MoneyTransferOperatorAddress: string;
    // ИНН оператора перевода, Тег ОФД 1016
    MoneyTransferOperatorVATIN: string;
  } | null;
  // Данные поставщика платежного агента.
  // Поле не обязательное. 
  PurveyorData?: {
    // Телефон поставщика тег ОД 1171
    PurveyorPhone: string;
  } | null;
  // Дополнительный реквизит пользователя тег ОФД 1084
  UserAttribute?: {
    // Наименование дополнительного реквизита пользователя тег ОД 1085
    Name: string;
    // Значение дополнительного реквизита пользователя тег ОФД 1086
    Value: string;
  };
  // Дополнительный реквизит чека тег 1192
  AdditionalAttribute?: string;
  // Строки чека
  CheckStrings: CheckString[];
  // Наличная оплата (2 знака после запятой), Тег 1031
  Cash?: number;
  // Сумма электронной оплаты (2 знака после запятой), Тег 1081
  ElectronicPayment?: number;
  // Сумма из предоплаты (зачетом аванса) (2 знака после запятой), Тег 1215
  AdvancePayment?: number;
  // Сумма постоплатой(в кредит) (2 знака после запятой), Тег 1216
  Credit?: number;
  // Сумма оплаты встречным предоставлением (сертификаты, др. мат.ценности) (2 знака после запятой), Тег 1217
  CashProvision?: number;
};

type ListReq = CommonRequest & {
  // Команда серверу
  Command: 'List';
  // Отбор по номеру устройства. Число. Если 0 или не указано то с любым номером
  NumDevice?: number;
  // Отбор по ИНН. Строка. Если "" или не указано то первое не блокированное на сервере
  InnKkm?: string;
  // Отбор активных. Булево. Если null или не указано то активные и не активные
  Active?: boolean;
  // Отбор выключенных-включенных
  OnOff?: boolean;
  // Отбор наличию ошибок ОФВ. Булево. Если null или не указано то с ошибками и без
  OFD_Error?: boolean | null;
  // Все у которых дата не переданного док. в ОФД меньше указанной. Дата-время. Если null или не указано то любое
  OFD_DateErrorDoc?: string | null; // '2100-01-01T00:00:00'
  // Все у которых дата окончания работы ФН меньше указанной. Дата-время. Если null или не указано то любое
  FN_DateEnd?: string | null; // 2100-01-01T00:00:00 
  // Все у которых заканчивается память ФН; Булево. Если null или не указано то все
  FN_MemOverflowl?: boolean | null;
  // Фискализованные или нет ФН; Булево. Если null или не указано то все
  FN_IsFiscal?: boolean | null;
};

type ListResItem = {
  NumDevice: number;
  IdDevice: string; // "60c177a0-412d-4e51-96e7-304e535f9681"
  OnOff: boolean;
  Active: boolean;
  TypeDevice: string; // "Фискальный регистратор"
  IdTypeDevice: string; // "Evotor"
  Firmware_Version: string; // "<Не определено>"
  IP: string;
  Port: string;
  NameDevice: string; // "Эвотор: Моя касса №1"
  UnitName: string;
  KktNumber: string; // "00308302628070"
  INN: string; // "7734407201"
  RegNumber: string;
  FnNumber: string;
  InnOfd: string;
  NameOrganization: string; // "ООО \"Винстрайк\""
  AddressSettle: string;
  // 0: Общая ОСН
  // 1: Упрощенная УСН (Доход)
  // 2: Упрощенная УСН (Доход минус Расход)
  // 3: Единый налог на вмененный доход ЕНВД
  // 4: Единый сельскохозяйственный налог ЕСН
  // 5: Патентная система налогообложения
  TaxVariant: string; // "0"
  AddDate: string; // "2021-03-22T18:20:47" 
  BSOMode: boolean;
  ServiceMode: boolean;
  OFD_Error: string;
  OFD_NumErrorDoc: number;
  OFD_DateErrorDoc: string; // "0001-01-01T00:00:00"
  FN_DateEnd: string; // "0001-01-01T00:00:00"
  FN_MemOverflowl: boolean;
  FN_IsFiscal: boolean;
  PaperOver: boolean;
  FFDVersion: string; // "1.05"
  FFDVersionFN: string; // "1.0"
  FFDVersionKKT: string; // "1.1"
  IsRegisterCheck: boolean;
};

type ListRes = {
  ListUnit: ListResItem[];
  Command: 'List';
  // Текст ошибки если была - обязательно показать пользователю - по содержанию ошибки можно в 90% случаях понять как ее устранять
  Error: string;
  Warning: string;
  Message: string;
  // Ok = 0, Run(Запущено на выполнение) = 1, Error = 2, NotFound(устройство не найдено) = 3, NotRun = 4
  Status: 0 | 1 | 2 | 3 | 4;
  IdCommand: string;
};

type CorrectionTax = {
  // Сумма коррекции НДС чека по ставке Без НДС, игнорируется для ККТ ФФД 1.0 (2 знака после запятой), Тег 1105
  SumTaxNone?: number;
  // Сумма коррекции НДС чека по ставке 20%, игнорируется для ККТ ФФД 1.0 (2 знака после запятой), Тег 1102
  SumTax20?: number;
  // Сумма коррекции НДС чека по ставке 10%, игнорируется для ККТ ФФД 1.0 (2 знака после запятой), Тег 1103
  SumTax10?: number;
  // Сумма коррекции НДС чека по ставке 0%, игнорируется для ККТ ФФД 1.0 (2 знака после запятой), Тег 1104
  SumTax0?: number;
  // Сумма коррекции НДС чека по ставке 20/120%, игнорируется для ККТ ФФД 1.0 (2 знака после запятой), Тег 1106
  SumTax120?: number;
  // Сумма коррекции НДС чека по ставке 10/110%, игнорируется для ККТ ФФД 1.0 (2 знака после запятой), Тег 1107
  SumTax110?: number;
};
type CorrectionCheckReq = Omit<RegisterCheckReq, 'CheckStrings'> & CorrectionTax & {
  //Тип коррекции 0 - самостоятельно 1 - по предписанию, Тег 1173
  CorrectionType?: 0 | 1;
  // Наименование основания для коррекции, Тег ОФД 1177
  CorrectionBaseName?: string;
  // Дата документа основания для коррекции, Тег ОФД 1178
  CorrectionBaseDate?: string; // '2017-06-21T15:30:45'
  // Номер документа основания для коррекции, Тег ОФД 1179
  CorrectionBaseNumber?: string;
  CheckStrings?: CorrectionString[];
  // Сумма расчета, игнорируется для ККТ ФФД 1.0, Тег 1020
  Amount: number;
};

type CashBoxReq = CommonRequest & {
  // Команда серверу "DepositingCash" или "PaymentCash"
  Command: 'DepositingCash' | 'PaymentCash';
  // Номер устройства. Если 0 то первое не блокированное на сервере
  NumDevice?: number;
  // Продавец, тег ОФД 1021
  CashierName: string;
  // ИНН продавца тег ОФД 1203
  CashierVATIN?: string;
  // Сумма внесения наличных
  Amount: number;
};

type ShiftReq = CommonRequest & {
  // Команда серверу
  Command: 'CloseShift' | 'OpenShift';
  // Номер устройства. Если 0 то первое не блокированное на сервере
  NumDevice?: number;
  // Продавец, тег ОФД 1021
  CashierName: string;
  // ИНН продавца тег ОФД 1203
  CashierVATIN?: string;
  // Не печатать чек на бумагу
  NotPrint: boolean;
  // Id устройства. Строка. Если = "" то первое не блокированное на сервере
  IdDevice?: string;
};

type XReportReq = CommonRequest & {
  // Команда серверу  "ZReport" ИЛИ  "XReport"
  Command: 'XReport';
  // Номер устройства. Если 0 то первое не блокированное на сервере
  NumDevice?: number;
};

type ResultReq = CommonRequest & {
  Command: 'GetRezult';
};

type RegisterCheckRes = CommonResponse & {    
  SessionCheckNumber: number;    // Номер чека в смене
  URL: string;                   // https://ofd-ya.ru/getFiscalDoc?kktRegId=0000000000061716&fiscalSign=839499349
  QRCode: string;                // t=20190101T195300&s=0.03&fn=9999078900002838&i=3&fp=839499349&n=1
  Command: 'RegisterCheck';
  Cash: number;                  // Оплачено наличными
  ElectronicPayment: number;     // Оплачено электронноо
  AdvancePayment: number;        // Оплачено предоплатой (зачетом аванса) 
  Credit: number;                // постоплатой(в кредит)
  CashProvision: number;         // встречным предоставлением (сертификаты, др. мат.ценности)
  Message: string;               // Сообщение пользователю - Если строка не пустая - ее нужно отобразить пользователю
  Amount: number;
  IdCommand: string;
  NumDevice: number;
  // Только если оплата картой
  RezultProcessing?: {
    CardNumber: string;
    ReceiptNumber: string;
    RRNCode: string;
    AuthorizationCode: string;
    Slip: string;
    PrintSlipOnTerminal: boolean;
    Amount: number;
    CardHash: string;
    TransDate: string;
    TerminalID: string;
    Command: string;
    Error: string;
    Warning: string;
    Message: string;
    //      Ok = 0,         - выполнено без ошибок
    //      Run = 1,        - команда запущена на выполнение но еще не выполнена
    //      Error = 2,      - команда выполнена, есть ошибка
    //      NotFound = 3,   - не найдена ранее запущенная команда команда (для асинхронного режима при выполнении команды GetRezult)
    //      NotRun = 4      - команда еще не запущена на выполнение (ожидание готовности устройства)
    Status: 0 | 1 | 2 | 3 | 4;
    IdCommand: string;
    NumDevice: number;
  };
};

type GetRezultRes<R extends CommonResponse = CommonResponse> = {
  Rezult?: R;
  Command: 'GetRezult';
  Error: string;
  Warning: string;
  Message: string;
  Status: 0 | 1 | 2 | 3 | 4 | 5 | 6;
  IdCommand: string;
};

export {
  CommonRequest,
  CommonResponse,
  Tax,
  ImageString,
  ItemString,
  BarCodeString,
  CheckString,
  CorrectionString,
  RegisterCheckReq,
  ListReq,
  ListResItem,
  ListRes,
  CorrectionTax,
  CorrectionCheckReq,
  CashBoxReq,
  ShiftReq,
  XReportReq,
  ResultReq,
  RegisterCheckRes,
  GetRezultRes,
};
